#!/bin/bash

#v0.4 created by sc0ttman, August 2010
#GPL license /usr/share/doc/legal/gpl-2.0.txt
#100830 BK added GPL license, amended Exit msg, bug fixes.
# zenity version by lagopus for antiX, Decemder 2010
# modified to yad by Dave for antiX, September 2011
# fix update URL to mvps
# changed to python files for each specific window, using python-gtk, by Thomas Castleman for Drauger OS, October 2019
# security and performance improvments by Thomas Castleman for Drauger OS, October 2019

# advert blocker
# downloads a list of known advert servers
# then appends them to /etc/hosts so that
# many online adverts are blocked from sight

if [ "$EUID" != "0" ]; then
	/usr/bin/pkexec /usr/bin/block-advert
	exit $?
fi
TEXTDOMAINDIR=/usr/share/locale
TEXTDOMAIN=block-advert

export title="antiX Advert Blocker"

# the markers used to find the changes in /etc/hosts, which are made by this app
export markerstart='# antiX-advert-blocker IPs below'
export markerend='# antiX-advert-blocker IPs above'

#info_text=$"The <b>$title</b> tool adds stuff to your /etc/hosts file, so \n\
#that many advertising servers and websites will not be able to connect \n\
#to this PC.\n\n\
#You can choose one service or combine multiple services for more advert protection.\n\
#Blocking ad servers protects your privacy, saves you bandwidth, greatly \n\
#improves web-browsing speed and makes the internet much less annoying in general.\n\n\
#Do you want to proceed?"

# width of progress dialogs
WIDTH=360

# cleanup all leftover files
function cleanup
{
    # remove all temp files
    /bin/rm -f /tmp/adlist{1,2,3,4} /tmp/adlist-all /tmp/hosts-temp
}

# concatenate the downloaded files
# clean out everything but the list of IPs and servers
function build_adlist_all
{
    #echo "====================YTO"
    # suppress comments, then empty lines, replace tabs by spaces
    # remove double spaces, remove lines not beginning by a number,
    # suppress \r at end of line
    # then sort unique by field 2 (url)
    /bin/cat /tmp/adlist{1,2,3,4} | /bin/sed '/^#/d' | /bin/sed '/^$/d' | /bin/sed 's/[\t]/ /g' | /bin/sed 's/  / /g' | /bin/sed -n '/^[0-9]/p' | /usr/bin/tr -d '\015' | /usr/bin/sort -u -k 2 > /tmp/adlist-all
    #echo "====================YTO"
}


# append the list to the /etc/hosts
function append_adlist
{
	# copy /etc/hosts, but the stuff between the markers, to a temp hosts file
	/bin/sed -e "/$markerstart/,/$markerend/d" /etc/hosts > /tmp/hosts-temp
	# remove the markers
	/bin/sed -i -e "/$markerstart/d" /tmp/hosts-temp
	/bin/sed -i -e "/$markerend/d"   /tmp/hosts-temp

	# check the size of the final adlist - if UNBLOCK is chosen, it will be 0.
    size=$(/usr/bin/stat -c%s /tmp/adlist-all 2>/dev/null)
    #echo $size
	if [ -n "$size" ] && [ "$size" -gt "0" ];then
		# add list contents into the hosts file, below a marker (for easier removal)
		builtin echo "$markerstart" >> /tmp/hosts-temp
		/bin/cat /tmp/adlist-all >> /tmp/hosts-temp
		builtin echo "$markerend"   >> /tmp/hosts-temp
	else
		yad --image="info" --title "$title" --text=$"Restoring original /etc/hosts."
        exit 1
	fi
    # On first use backup original /etc/hosts to /etc/hosts.ORIGINAL
    # If /etc/hosts.original exists, then backup to /etc/hosts.saved
    if [ -f /etc/hosts.ORIGINAL ]; then
		/bin/cp "/etc/hosts" "/etc/hosts.saved"
		/bin/mv "/tmp/hosts-temp" "/etc/hosts"
    else
		/bin/cp "/etc/hosts" "/etc/hosts.ORIGINAL"
		/bin/cp "/etc/hosts" "/etc/hosts.saved"
		/bin/mv "/tmp/hosts-temp" "/etc/hosts"
    fi
}


# usage: wget_dialog url file
# $1 : url of the file
# $2 : file: location of the downloaded file
function wget_dialog
{
    #echo "url: [$1]"
    url=$1
    # extract domain name between // and /
    domain=$(builtin echo "$url" | cut -d/ -f3)
    #echo "===> $domain"

    # '--progress=dot' prints dots and a percentage at the end of the line
    # print $7 to cut the percentage
    # system("") to flush the output of awk in the pipe
    # sed to delete the ending '%' sign
    # sed -u to flush the output of sed
    # changed -t 0 (tries) to -t 20
    /usr/bin/wget -c -4 -t 20 -T 10 --progress=dot -O $2 "$1" 2>&1 | /usr/bin/awk '{print $7}; system("")' | /bin/sed -u 's/%//' | yad --title "$title" --progress --width $WIDTH --text=$"Loading  adlist from $domain" --percentage=0 --auto-close
}

# download the ads lists
function download_adlist
{
    # mvps
    if [ "$mvps" = true ]; then
        wget_dialog http://winhelp2002.mvps.org/hosts.txt /tmp/adlist1 # TP fix update URL
    fi
    /bin/sed -i 's/0.0.0.0/127.0.0.1/' /tmp/adlist1 # TP fix to change 0.0.0.0 to 127.0.0.1 in mvps list
    /bin/sed -i 's/ #.*$//' /tmp/adlist1 # TP fix to remove comments in mvps list

    # someonewhocares
    if [ "$someonewhocares" = true ]; then
        wget_dialog http://someonewhocares.org/hosts/hosts /tmp/adlist2
    fi

    # yoyo
    if [ "$yoyo" = true ]; then
        wget_dialog 'http://pgl.yoyo.org/adservers/serverlist.php?hostformat=hosts&showintro=0&mimetype=plaintext' /tmp/adlist3
    fi

    # adservers
    if [ "$adservers" = true ]; then
        wget_dialog http://hosts-file.net/ad_servers.asp /tmp/adlist4
    fi

    # UNBLOCK
    if [ "$unblock" = true ]; then
        /bin/mv -f "/etc/hosts.ORIGINAL" "/etc/hosts"
        /bin/rm -f "/etc/hosts.saved"
    fi

    #100830 BK bug fix: create if not exist...
    /usr/bin/touch /tmp/adlist{1,2,3,4}
}


function success
{
	# tell user
	#yad --image "info" --title "$title" --text=$"Success - your settings have been changed.\n\n\
#Your hosts file has been updated.\n\
#Restart your browser to see the changes."
	/usr/share/advert-block/success.py
}

function error_report
{
	/bin/mkdir /tmp/advert-block-antix 2>/dev/null
	if [ "$3" == "download_adlist" ]; then
		/usr/share/advert-block/error.py "downloading"
	elif [ "$3" == "build_adlist_all" ] || [ "$2" == "append_adlist" ]; then
		/usr/share/advert-block/error.py "editing"
	elif [ "$3" == "cleanup" ]; then
		/usr/share/advert-block/error.py "cleanup"
	elif [ "$3" == "success" ]; then
		/usr/share/advert-block/error.py "success"
	fi
	if [ "$2" == "0" ]; then
		type="notice"
	elif [ "$2" == "1" ]; then
		type="warning"
	elif [[ "$2" -ge 2 ]]; then
		type="error"
	fi
	builtin echo -e "\nAn $type has occured in function $3\n\tCalled As: $1\n\tError Code: $2\n\tError Message: $4" >> /tmp/advert-block-antix/block-advert.log
}

#=======================================================================
# main
#

# display message and ask to continue
#yad --title "$title" --width "$WIDTH" --image "question" --text "$info_text"
confirm=$(/usr/share/advert-block/confirm.py 2>/dev/null)
rsp=$?
if [ $rsp != 1 ]; then
    exit 1
elif [ "$confirm" == "EXIT" ]; then
	exit 1
fi

# selection dialog
#ans=$(yad --title "$title" \
             #--width "$WIDTH" --height 220 \
             #--list --separator=":" \
             #--text $"Choose your preferred ad blocking service(s)" \
             #--checklist  --column "Pick" --column "Service"\
             #FALSE "mvps.org" \
             #FALSE "someonewhocares.org" \
             #FALSE "yoyo.org" \
             #FALSE "adservers.org" \
             #FALSE "UNBLOCK" )
ans=$(/usr/share/advert-block/selection.py 2>/dev/null)
rsp=$?
if [ $rsp != 1 ]; then
    exit 1
elif [ "$ans" == "EXIT" ]; then
	exit 1
fi
#echo $ans

# transform the list separated by ':' into arr
arr=$(echo $ans | tr ":" "\n")
#echo $arr

selected=""
for x in $arr
do
    #echo "> [$x]"
    case $x in
    mvps.org)
        mvps='true'
        selected='yes'
        ;;
    someonewhocares.org)
        someonewhocares='true'
        selected='yes'
        ;;
    yoyo.org)
        yoyo='true'
        selected='yes'
        ;;
    adservers.org)
        adservers='true'
        selected='yes'
        ;;
    UNBLOCK)
        unblock='true'
        selected='yes'
        ;;
    esac
done

if [ -z $selected ]; then
    # nothing selected
    builtin echo "No item selected"
    exit 0
fi

set -Ee
cleanup || error_report "$0" "$?" "cleanup"
download_adlist || error_report "$0" "$?" "download_adlist"
build_adlist_all || error_report "$0" "$?" "build_adlist_all"
append_adlist || error_report "$0" "$?" "append_adlist"
cleanup || error_report "$0" "$?" "cleanup"
success || error_report "$0" "$?" "success"
